from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from bot_responses import (
    HELP_MENU_MESSAGE, EMERGENCY_MESSAGE, HOUSING_FINANCE_PROMPT, PSYCHOLOGICAL_HELP_PROMPT,
    CHOOSE_HELP_CATEGORY, LGBT_FAMILIES_INFO, DOCUMENTS_MESSAGE, PROPAGANDA_MESSAGE,
    CONSULTATION_PROMPT, REPORT_ABUSE_MESSAGE
)
from keyboards import HELP_MENU_BUTTONS, LEGAL_MENU_BUTTONS, BACK_BUTTON
from utils.constants import BotState, REQUEST_TYPES

async def help_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø–æ–º–æ—â–∏."""
    user_choice = update.message.text
    if user_choice == BACK_BUTTON:
        keyboard = ReplyKeyboardMarkup(MAIN_MENU_BUTTONS, resize_keyboard=True)
        await update.message.reply_text(
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=keyboard,
        )
        return BotState.MAIN_MENU
    elif user_choice == "üö® –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å":
        context.user_data["request_type"] = REQUEST_TYPES["emergency"]
        keyboard = ReplyKeyboardMarkup([[BACK_BUTTON]], resize_keyboard=True)
        await update.message.reply_text(EMERGENCY_MESSAGE, reply_markup=keyboard)
        return BotState.TYPING
    elif user_choice == "üè† –ñ–∏–ª—å–µ/—Ñ–∏–Ω–∞–Ω—Å—ã":
        context.user_data["request_type"] = REQUEST_TYPES["housing"]
        keyboard = ReplyKeyboardMarkup([[BACK_BUTTON]], resize_keyboard=True)
        await update.message.reply_text(HOUSING_FINANCE_PROMPT, reply_markup=keyboard)
        return BotState.TYPING
    elif user_choice == "üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å":
        context.user_data["request_type"] = REQUEST_TYPES["psych"]
        keyboard = ReplyKeyboardMarkup([[BACK_BUTTON]], resize_keyboard=True)
        await update.message.reply_text(PSYCHOLOGICAL_HELP_PROMPT, reply_markup=keyboard)
        return BotState.TYPING
    elif user_choice == "ü©∫ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å":
        keyboard = ReplyKeyboardMarkup(MEDICAL_MENU_BUTTONS + [[BACK_BUTTON]], resize_keyboard=True)
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø–æ–º–æ—â–∏:",
            reply_markup=keyboard,
        )
        return BotState.MEDICAL_MENU
    elif user_choice == "‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å":
        keyboard = ReplyKeyboardMarkup(LEGAL_MENU_BUTTONS + [[BACK_BUTTON]], resize_keyboard=True)
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏:",
            reply_markup=keyboard,
        )
        return BotState.FAQ_LEGAL
    await update.message.reply_text(CHOOSE_HELP_CATEGORY)
    return BotState.HELP_MENU

async def faq_legal(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã."""
    choice = update.message.text
    keyboard = ReplyKeyboardMarkup([[BACK_BUTTON]], resize_keyboard=True)
    if choice == BACK_BUTTON:
        keyboard = ReplyKeyboardMarkup(HELP_MENU_BUTTONS + [[BACK_BUTTON]], resize_keyboard=True)
        await update.message.reply_text(
            HELP_MENU_MESSAGE,
            reply_markup=keyboard,
        )
        return BotState.HELP_MENU
    elif choice == "üè≥Ô∏è‚Äçüåà –õ–ì–ë–¢+ —Å–µ–º—å–∏":
        await update.message.reply_text(
            LGBT_FAMILIES_INFO,
            parse_mode="Markdown",
            reply_markup=keyboard,
        )
        return BotState.FAQ_LEGAL
    elif choice == "üìù –ö–∞–∫ —Å–º–µ–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã":
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data='request_legal_docs')]
        ])
        await update.message.reply_text(DOCUMENTS_MESSAGE, parse_mode="Markdown", reply_markup=keyboard)
        return BotState.FAQ_LEGAL
    elif choice == "üì¢ –ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∞ –õ–ì–ë–¢?":
        await update.message.reply_text(PROPAGANDA_MESSAGE, parse_mode="Markdown", reply_markup=keyboard)
        return BotState.FAQ_LEGAL
    elif choice == "üó£Ô∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è":
        await update.message.reply_text(
            CONSULTATION_PROMPT,
            parse_mode="Markdown",
            reply_markup=keyboard,
        )
        context.user_data["request_type"] = REQUEST_TYPES["legal_consult"]
        return BotState.TYPING
    elif choice == "üö® –°–æ–æ–±—â–∏—Ç—å –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏":
        await update.message.reply_text(
            REPORT_ABUSE_MESSAGE,
            parse_mode="Markdown",
            reply_markup=keyboard,
        )
        context.user_data["request_type"] = REQUEST_TYPES["legal_abuse"]
        return BotState.TYPING
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.")
    return BotState.FAQ_LEGAL
